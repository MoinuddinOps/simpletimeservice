name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/simpletimeservice:latest

jobs:
  lint-dockerfile:
    name: Lint Dockerfile
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Hadolint (Dockerfile Linter)
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: ${{ github.workspace }}/app/Dockerfile  # ✅ Correct path

  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: lint-dockerfile  # Runs only if linting passes

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME ${{ github.workspace }}/app  # ✅ Correct path

      - name: Push Docker image
        run: docker push $IMAGE_NAME

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: build-and-push  # Runs only if Docker build & push succeed

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Initialize Terraform
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
        run: terraform init
        working-directory: ${{ github.workspace }}/terraform  # ✅ Fixed

      - name: Apply Terraform changes
        env:
          TF_TOKEN_app_terraform_io: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
        run: terraform apply -auto-approve
        working-directory: ${{ github.workspace }}/terraform  # ✅ Fixed
